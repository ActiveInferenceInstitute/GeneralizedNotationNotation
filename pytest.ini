[tool:pytest]
testpaths = src/tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

markers =
    fast: marks tests as fast (execute quickly)
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    safe_to_fail: marks tests as safe to fail with mocked dependencies
    requires_api: marks tests that require external API access
    requires_gpu: marks tests that require GPU/CUDA availability
    requires_internet: marks tests that require internet connectivity
    destructive: marks tests that modify the file system
    pipeline: marks tests as pipeline tests
    sapf: marks tests as SAPF tests
    render: marks tests as render tests
    environment: marks tests as environment tests
    export: marks tests as export tests
    visualization: marks tests as visualization tests
    type_checking: marks tests as type checking tests
    main_orchestrator: marks tests as main orchestrator tests
    mcp: marks tests as MCP tests
    recovery: marks tests as recovery tests

# Disable recursion warnings and set lower limits to avoid pathlib issues
addopts = --disable-warnings --tb=short --maxfail=5 --strict-markers=false
filterwarnings =
    ignore::RecursionWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*pathlib.*:DeprecationWarning
    ignore:.*matplotlib.*:UserWarning

# Set environment variables for tests
env =
    GNN_TEST_MODE = true
    GNN_SAFE_MODE = true
    PYTHONPATH = src

# Reduce memory usage and recursion issues
python_paths = src 