[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "generalized-notation-notation"
version = "1.1.0"
description = "A text-based language for standardizing Active Inference generative models"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "CC-BY-NC-SA-4.0"}
authors = [
    {name = "Active Inference Institute", email = "contact@activeinference.org"}
]
keywords = ["active-inference", "gnn", "cognitive-modeling", "scientific-computing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Core dependencies (essential for basic functionality)
dependencies = [
    # Core scientific computing (lightweight)
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "networkx>=2.6.0",
    "pandas>=1.3.0",
    "pyyaml>=6.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    # Testing and development (essential)
    "pytest>=6.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=3.0.0",
    "pytest-json-report>=1.5.0",
    "pytest-xdist>=2.5.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    # System monitoring and utilities
    "psutil>=5.8.0",
    "toml>=0.10.0",
    "defusedxml>=0.7.0",
    # Security tools
    "bandit>=1.7.0",
    "safety>=2.3.0",
    # HTTP and async communication
    "aiohttp>=3.9.0",
    "httpx>=0.27.0",
    # GNN processing
    "markdown>=3.0.0",
    # Active Inference ecosystem
    "pymdp>=0.0.1",
    # High-performance computing
    "jax[cpu]>=0.4.0",
    "jaxlib>=0.4.0",
    "flax>=0.7.0",
    "optax>=0.1.0",
    # Visualization and diagramming
    "discopy[matrix]>=1.0.0",
    "altair>=5.0.0",
    "plotly>=6.2.0",
    "gradio>=4.44.1",
]

# Development dependencies (enhanced for comprehensive development workflow)
[project.optional-dependencies]
dev = [
    # Additional testing tools
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "pytest-sugar>=0.9.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.0.0",

    # Code quality and linting
    "isort>=5.12.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
    "mypy-extensions>=1.0.0",
    "ruff>=0.1.0",
    "pylint>=3.0.0",

    # Documentation generation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",

    # Interactive development
    "ipython>=8.0.0",
    "ipdb>=0.13.0",
    "jupyterlab>=4.0.0",
    "jupyter-server>=2.0.0",
    "ipywidgets>=8.0.0",

    # Performance profiling and debugging
    "py-spy>=0.3.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.0.0",

    # Development utilities
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

# Optional heavy packages (install separately based on use case requirements)
active-inference = [
    "pymdp>=0.1.0",
    "jax[cpu]>=0.4.0",
    "jaxlib>=0.4.0",
    "flax>=0.7.0",
    "optax>=0.1.0",
]

ml-ai = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
    "transformers>=4.25.0",
    "datasets>=2.10.0",
    "accelerate>=0.20.0",
]

llm = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "cohere>=4.0.0",
    "ollama>=0.1.0",
]

visualization = [
    "plotly>=5.15.0",
    "altair>=5.0.0",
    "seaborn>=0.12.0",
    "bokeh>=3.0.0",
    "holoviews>=1.17.0",
    "panel>=1.0.0",
    "plotly-dash>=2.10.0",
]

audio = [
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "pedalboard>=0.7.0",
    "pydub>=0.25.0",
    "pyaudio>=0.2.0",
]

gui = [
    "gradio>=4.0.0",
    "streamlit>=1.25.0",
]

graphs = [
    "igraph>=0.10.0",
    "graphviz>=0.20.0",
    "discopy[categorical]>=1.1.0",
]

research = [
    "jupyterlab>=4.0.0",
    "jupyter-server>=2.0.0",
    "sympy>=1.12.0",
    "numba>=0.57.0",
    "cython>=3.0.0",
    "snakes>=0.9.0",
    "pymdp-toolbox>=0.1.0",
]

scaling = [
    "dask>=2023.0.0",
    "distributed>=2023.0.0",
    "multiprocess>=0.70.0",
    "joblib>=1.3.0",
    "lru-dict>=1.2.0",
    "fsspec>=2023.0.0",
    "s3fs>=2023.0.0",
]

database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.10.0",
]

# All optional dependencies (install everything)
all = [
    # Active Inference ecosystem
    "pymdp>=0.1.0",
    "jax[cpu]>=0.4.0",
    "jaxlib>=0.4.0",
    "flax>=0.7.0",
    "optax>=0.1.0",

    # Machine Learning & AI
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
    "transformers>=4.25.0",
    "datasets>=2.10.0",
    "accelerate>=0.20.0",

    # LLM integration
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "cohere>=4.0.0",
    "ollama>=0.1.0",

    # Visualization and graphics
    "plotly>=5.15.0",
    "altair>=5.0.0",
    "seaborn>=0.12.0",
    "bokeh>=3.0.0",
    "holoviews>=1.17.0",
    "panel>=1.0.0",
    "plotly-dash>=2.10.0",
    "igraph>=0.10.0",
    "graphviz>=0.20.0",
    "discopy[categorical]>=1.1.0",

    # Audio processing
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "pedalboard>=0.7.0",
    "pydub>=0.25.0",
    "pyaudio>=0.2.0",

    # GUI and interactive interfaces
    "gradio>=4.0.0",
    "streamlit>=1.25.0",

    # Research and scientific computing
    "jupyterlab>=4.0.0",
    "jupyter-server>=2.0.0",
    "sympy>=1.12.0",
    "numba>=0.57.0",
    "cython>=3.0.0",
    "snakes>=0.9.0",
    "pymdp-toolbox>=0.1.0",

    # Scaling and performance
    "dask>=2023.0.0",
    "distributed>=2023.0.0",
    "multiprocess>=0.70.0",
    "joblib>=1.3.0",
    "lru-dict>=1.2.0",
    "fsspec>=2023.0.0",
    "s3fs>=2023.0.0",

    # Database connectivity
    "sqlalchemy>=2.0.0",
    "alembic>=1.10.0",
]

[project.urls]
Homepage = "https://github.com/ActiveInferenceInstitute/GeneralizedNotationNotation"
Documentation = "https://github.com/ActiveInferenceInstitute/GeneralizedNotationNotation/tree/main/doc"
Repository = "https://github.com/ActiveInferenceInstitute/GeneralizedNotationNotation.git"
Issues = "https://github.com/ActiveInferenceInstitute/GeneralizedNotationNotation/issues"

[project.scripts]
gnn = "src.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "jax.*",
    "jaxlib.*", 
    "flax.*",
    "optax.*",
    "discopy.*",
    "pymdp.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["src/tests", "tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "src/tests"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"] 
