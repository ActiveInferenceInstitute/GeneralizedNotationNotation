///
/// GNN Model: Active Inference Neural Response Model v1
/// Annotation: This model describes how a neuron responds to stimuli using Active Inference principles:
- One primary observation modality (firing_rate) with 4 possible activity levels
- Two auxiliary observation modalities (postsynaptic_potential, calcium_signal) for comprehensive monitoring
- Five hidden state factors representing different aspects of neural computation
- Three control factors for plasticity, channel modulation, and metabolic allocation
- The model captures key neural phenomena: membrane potential dynamics, synaptic plasticity (STDP-like), activity-dependent adaptation, homeostatic regulation, and metabolic constraints
- Preferences encode biologically realistic goals: stable firing rates, energy efficiency, and synaptic balance
/// Generated: 2025-10-02T10:52:16.345455
/// Enhanced by GNN PKL Serializer
///

@ModuleInfo { minPklVersion = "0.25.0" }

class GNNModel {{
  name: String = "Active Inference Neural Response Model v1"
  annotation: String = "This model describes how a neuron responds to stimuli using Active Inference principles:
- One primary observation modality (firing_rate) with 4 possible activity levels
- Two auxiliary observation modalities (postsynaptic_potential, calcium_signal) for comprehensive monitoring
- Five hidden state factors representing different aspects of neural computation
- Three control factors for plasticity, channel modulation, and metabolic allocation
- The model captures key neural phenomena: membrane potential dynamics, synaptic plasticity (STDP-like), activity-dependent adaptation, homeostatic regulation, and metabolic constraints
- Preferences encode biologically realistic goals: stable firing rates, energy efficiency, and synaptic balance"

  variables: Mapping<String, Variable> = new Mapping {{
    ["A"] = new Variable {
      name = "A"
      varType = "likelihood_matrix"
      dataType = "float"
      dimensions = List(12, 405)
    }}
    ["A"] = new Variable {
      name = "A"
      varType = "likelihood_matrix"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["B"] = new Variable {
      name = "B"
      varType = "transition_matrix"
      dataType = "float"
      dimensions = List(405, 405, 27)
    }}
    ["C"] = new Variable {
      name = "C"
      varType = "preference_vector"
      dataType = "float"
      dimensions = List(12)
    }}
    ["C_mod"] = new Variable {
      name = "C_mod"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["Ca"] = new Variable {
      name = "Ca"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["D"] = new Variable {
      name = "D"
      varType = "prior_vector"
      dataType = "float"
      dimensions = List(405)
    }}
    ["E"] = new Variable {
      name = "E"
      varType = "policy"
      dataType = "float"
      dimensions = List(27)
    }}
    ["F"] = new Variable {
      name = "F"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(1)
    }}
    ["FR"] = new Variable {
      name = "FR"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(4, 1)
    }}
    ["G"] = new Variable {
      name = "G"
      varType = "policy"
      dataType = "float"
      dimensions = List(1)
    }}
    ["H"] = new Variable {
      name = "H"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["M"] = new Variable {
      name = "M"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["M_alloc"] = new Variable {
      name = "M_alloc"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["P"] = new Variable {
      name = "P"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["PSP"] = new Variable {
      name = "PSP"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(3, 1)
    }}
    ["V_m"] = new Variable {
      name = "V_m"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(5, 1)
    }}
    ["W"] = new Variable {
      name = "W"
      varType = "hidden_state"
      dataType = "float"
      dimensions = List(4, 1)
    }}
    ["t"] = new Variable {
      name = "t"
      varType = "hidden_state"
      dataType = "integer"
      dimensions = List(1)
    }}
  }}

  connections: Mapping<String, Connection> = new Mapping {{
    ["connection_0"] = new Connection {
      sourceVariables = List("D")
      targetVariables = List("V_m")
      connectionType = "directed"
    }}
    ["connection_1"] = new Connection {
      sourceVariables = List("V_m")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_2"] = new Connection {
      sourceVariables = List("W")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_3"] = new Connection {
      sourceVariables = List("A")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_4"] = new Connection {
      sourceVariables = List("H")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_5"] = new Connection {
      sourceVariables = List("M")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_6"] = new Connection {
      sourceVariables = List("V_m")
      targetVariables = List("A")
      connectionType = "directed"
    }}
    ["connection_7"] = new Connection {
      sourceVariables = List("W")
      targetVariables = List("A")
      connectionType = "directed"
    }}
    ["connection_8"] = new Connection {
      sourceVariables = List("V_m")
      targetVariables = List("A")
      connectionType = "directed"
    }}
    ["connection_9"] = new Connection {
      sourceVariables = List("P")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_10"] = new Connection {
      sourceVariables = List("C_mod")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_11"] = new Connection {
      sourceVariables = List("M_alloc")
      targetVariables = List("B")
      connectionType = "directed"
    }}
    ["connection_12"] = new Connection {
      sourceVariables = List("C")
      targetVariables = List("G")
      connectionType = "directed"
    }}
    ["connection_13"] = new Connection {
      sourceVariables = List("E")
      targetVariables = List("P")
      connectionType = "directed"
    }}
    ["connection_14"] = new Connection {
      sourceVariables = List("G")
      targetVariables = List("P")
      connectionType = "directed"
    }}
    ["connection_15"] = new Connection {
      sourceVariables = List("P")
      targetVariables = List("C_mod")
      connectionType = "directed"
    }}
    ["connection_16"] = new Connection {
      sourceVariables = List("C_mod")
      targetVariables = List("M_alloc")
      connectionType = "directed"
    }}
  }}

  parameters: Mapping<String, Parameter> = new Mapping {{
    ["A"] = new Parameter {
      name = "A"
      value = List([0.05, 0.15, 0.25, 0.55, 0.4, 0.4, 0.2, 0.1, 0.35, 0.55, 0.3, 0.45], [0.1, 0.2, 0.3, 0.4, 0.35, 0.45, 0.2, 0.15, 0.4, 0.45, 0.25, 0.4], [0.15, 0.25, 0.35, 0.25, 0.3, 0.5, 0.2, 0.2, 0.45, 0.35, 0.2, 0.35])
      paramType = "constant"
    }}
    ["B"] = new Parameter {
      name = "B"
      value = List()
      paramType = "constant"
    }}
    ["C"] = new Parameter {
      name = "C"
      value = List([0.1, 0.2, 0.4, 0.3, 0.15, 0.35, 0.5, 0.25, 0.35, 0.4, 0.25, 0.2])
      paramType = "constant"
    }}
    ["D"] = new Parameter {
      name = "D"
      value = List([0.05, 0.15, 0.35, 0.35, 0.1, 0.2, 0.4, 0.3, 0.1, 0.4, 0.4, 0.2, 0.2, 0.6, 0.2, 0.15, 0.7, 0.15])
      paramType = "constant"
    }}
    ["E"] = new Parameter {
      name = "E"
      value = List([0.2, 0.3, 0.5, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.3, 0.4, 0.3, 0.25, 0.5, 0.25, 0.3, 0.4, 0.3, 0.35, 0.4, 0.25, 0.3, 0.45, 0.25, 0.35, 0.4, 0.25])
      paramType = "constant"
    }}
  }}

  ontologyMappings: List<OntologyMapping> = new List {{
  }}

}}

class Variable {{
  name: String
  varType: String
  dataType: String
  dimensions: List<Int>
}}

class Connection {{
  sourceVariables: List<String>
  targetVariables: List<String>
  connectionType: String
}}

class Parameter {{
  name: String
  value: Any
  paramType: String
}}

class TimeSpec {{
  timeType: String
  steps: Int
  description: String?
}}

class OntologyMapping {{
  variableName: String
  ontologyTerm: String
}}

/* MODEL_DATA: {"model_name":"Active Inference Neural Response Model v1","annotation":"This model describes how a neuron responds to stimuli using Active Inference principles:\n- One primary observation modality (firing_rate) with 4 possible activity levels\n- Two auxiliary observation modalities (postsynaptic_potential, calcium_signal) for comprehensive monitoring\n- Five hidden state factors representing different aspects of neural computation\n- Three control factors for plasticity, channel modulation, and metabolic allocation\n- The model captures key neural phenomena: membrane potential dynamics, synaptic plasticity (STDP-like), activity-dependent adaptation, homeostatic regulation, and metabolic constraints\n- Preferences encode biologically realistic goals: stable firing rates, energy efficiency, and synaptic balance","variables":[{"name":"A","var_type":"likelihood_matrix","data_type":"float","dimensions":[12,405]},{"name":"B","var_type":"transition_matrix","data_type":"float","dimensions":[405,405,27]},{"name":"C","var_type":"preference_vector","data_type":"float","dimensions":[12]},{"name":"D","var_type":"prior_vector","data_type":"float","dimensions":[405]},{"name":"E","var_type":"policy","data_type":"float","dimensions":[27]},{"name":"V_m","var_type":"hidden_state","data_type":"float","dimensions":[5,1]},{"name":"W","var_type":"hidden_state","data_type":"float","dimensions":[4,1]},{"name":"A","var_type":"likelihood_matrix","data_type":"float","dimensions":[3,1]},{"name":"H","var_type":"hidden_state","data_type":"float","dimensions":[3,1]},{"name":"M","var_type":"hidden_state","data_type":"float","dimensions":[3,1]},{"name":"FR","var_type":"hidden_state","data_type":"float","dimensions":[4,1]},{"name":"PSP","var_type":"hidden_state","data_type":"float","dimensions":[3,1]},{"name":"Ca","var_type":"hidden_state","data_type":"float","dimensions":[3,1]},{"name":"P","var_type":"hidden_state","data_type":"float","dimensions":[3,1]},{"name":"C_mod","var_type":"hidden_state","data_type":"float","dimensions":[3,1]},{"name":"M_alloc","var_type":"hidden_state","data_type":"float","dimensions":[3,1]},{"name":"F","var_type":"hidden_state","data_type":"float","dimensions":[1]},{"name":"G","var_type":"policy","data_type":"float","dimensions":[1]},{"name":"t","var_type":"hidden_state","data_type":"integer","dimensions":[1]}],"connections":[{"source_variables":["D"],"target_variables":["V_m"],"connection_type":"directed"},{"source_variables":["V_m"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["W"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["A"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["H"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["M"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["V_m"],"target_variables":["A"],"connection_type":"directed"},{"source_variables":["W"],"target_variables":["A"],"connection_type":"directed"},{"source_variables":["V_m"],"target_variables":["A"],"connection_type":"directed"},{"source_variables":["P"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["C_mod"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["M_alloc"],"target_variables":["B"],"connection_type":"directed"},{"source_variables":["C"],"target_variables":["G"],"connection_type":"directed"},{"source_variables":["E"],"target_variables":["P"],"connection_type":"directed"},{"source_variables":["G"],"target_variables":["P"],"connection_type":"directed"},{"source_variables":["P"],"target_variables":["C_mod"],"connection_type":"directed"},{"source_variables":["C_mod"],"target_variables":["M_alloc"],"connection_type":"directed"}],"parameters":[{"name":"A","value":[[0.05,0.15,0.25,0.55,0.4,0.4,0.2,0.1,0.35,0.55,0.3,0.45],[0.1,0.2,0.3,0.4,0.35,0.45,0.2,0.15,0.4,0.45,0.25,0.4],[0.15,0.25,0.35,0.25,0.3,0.5,0.2,0.2,0.45,0.35,0.2,0.35]],"param_type":"constant"},{"name":"B","value":[],"param_type":"constant"},{"name":"C","value":[[0.1,0.2,0.4,0.3,0.15,0.35,0.5,0.25,0.35,0.4,0.25,0.2]],"param_type":"constant"},{"name":"D","value":[[0.05,0.15,0.35,0.35,0.1,0.2,0.4,0.3,0.1,0.4,0.4,0.2,0.2,0.6,0.2,0.15,0.7,0.15]],"param_type":"constant"},{"name":"E","value":[[0.2,0.3,0.5,0.25,0.5,0.25,0.25,0.5,0.25,0.3,0.4,0.3,0.25,0.5,0.25,0.3,0.4,0.3,0.35,0.4,0.25,0.3,0.45,0.25,0.35,0.4,0.25]],"param_type":"constant"}],"equations":[],"time_specification":{"time_type":"Dynamic","discretization":null,"horizon":"Unbounded # Neural model defined for continuous operation; simulations may specify finite duration.","step_size":null},"ontology_mappings":[{"variable_name":"A","ontology_term":"LikelihoodMatrix","description":null},{"variable_name":"B","ontology_term":"TransitionMatrices","description":null},{"variable_name":"C","ontology_term":"LogPreferenceVector","description":null},{"variable_name":"D","ontology_term":"PriorOverHiddenStates","description":null},{"variable_name":"E","ontology_term":"HabitVector","description":null},{"variable_name":"F","ontology_term":"VariationalFreeEnergy","description":null},{"variable_name":"G","ontology_term":"ExpectedFreeEnergy","description":null},{"variable_name":"V_m","ontology_term":"MembranePotentialState","description":null},{"variable_name":"W","ontology_term":"SynapticWeightFactor","description":null},{"variable_name":"A","ontology_term":"AdaptationState","description":null},{"variable_name":"H","ontology_term":"HomeostaticSetPoint","description":null},{"variable_name":"M","ontology_term":"MetabolicState","description":null},{"variable_name":"FR","ontology_term":"FiringRateObservation","description":null},{"variable_name":"PSP","ontology_term":"PostsynapticPotentialObservation","description":null},{"variable_name":"Ca","ontology_term":"CalciumSignalObservation","description":null},{"variable_name":"P","ontology_term":"PlasticityControl","description":null},{"variable_name":"C_mod","ontology_term":"ChannelModulation","description":null},{"variable_name":"M_alloc","ontology_term":"MetabolicAllocation","description":null},{"variable_name":"t","ontology_term":"TimeStep","description":null}]} */

// Variables:
// Variable: A (likelihood_matrix)
// Variable: B (transition_matrix)
// Variable: C (preference_vector)
// Variable: D (prior_vector)
// Variable: E (policy)
// Variable: V_m (hidden_state)
// Variable: W (hidden_state)
// Variable: A (likelihood_matrix)
// Variable: H (hidden_state)
// Variable: M (hidden_state)
// Variable: FR (hidden_state)
// Variable: PSP (hidden_state)
// Variable: Ca (hidden_state)
// Variable: P (hidden_state)
// Variable: C_mod (hidden_state)
// Variable: M_alloc (hidden_state)
// Variable: F (hidden_state)
// Variable: G (policy)
// Variable: t (hidden_state)
// Connections:
// Connection: D --directed--> V_m
// Connection: V_m --directed--> B
// Connection: W --directed--> B
// Connection: A --directed--> B
// Connection: H --directed--> B
// Connection: M --directed--> B
// Connection: V_m --directed--> A
// Connection: W --directed--> A
// Connection: V_m --directed--> A
// Connection: P --directed--> B
// Connection: C_mod --directed--> B
// Connection: M_alloc --directed--> B
// Connection: C --directed--> G
// Connection: E --directed--> P
// Connection: G --directed--> P
// Connection: P --directed--> C_mod
// Connection: C_mod --directed--> M_alloc
// Parameters:
// Parameter: A = [[0.05, 0.15, 0.25, 0.55, 0.4, 0.4, 0.2, 0.1, 0.35, 0.55, 0.3, 0.45], [0.1, 0.2, 0.3, 0.4, 0.35, 0.45, 0.2, 0.15, 0.4, 0.45, 0.25, 0.4], [0.15, 0.25, 0.35, 0.25, 0.3, 0.5, 0.2, 0.2, 0.45, 0.35, 0.2, 0.35]]
// Parameter: B = []
// Parameter: C = [[0.1, 0.2, 0.4, 0.3, 0.15, 0.35, 0.5, 0.25, 0.35, 0.4, 0.25, 0.2]]
// Parameter: D = [[0.05, 0.15, 0.35, 0.35, 0.1, 0.2, 0.4, 0.3, 0.1, 0.4, 0.4, 0.2, 0.2, 0.6, 0.2, 0.15, 0.7, 0.15]]
// Parameter: E = [[0.2, 0.3, 0.5, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.3, 0.4, 0.3, 0.25, 0.5, 0.25, 0.3, 0.4, 0.3, 0.35, 0.4, 0.25, 0.3, 0.45, 0.25, 0.35, 0.4, 0.25]]