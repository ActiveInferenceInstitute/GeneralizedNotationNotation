{
  "success": false,
  "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/4d/Documents/GitHub/GeneralizedNotationNotation/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/4d/Documents/GitHub/GeneralizedNotationNotation\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, cov-6.2.1\ncollecting ... collected 334 items / 8 errors\n\n==================================== ERRORS ====================================\n_____________ ERROR collecting src/tests/test_comprehensive_api.py _____________\nsrc/tests/test_comprehensive_api.py:16: in <module>\n    import src.gnn\nsrc/gnn/__init__.py:13: in <module>\n    from .schema_validator import (\nsrc/gnn/schema_validator.py:51: in <module>\n    from .testing.test_round_trip import RoundTripResult\nsrc/gnn/testing/__init__.py:11: in <module>\n    from .test_round_trip import ComprehensiveTestReport, RoundTripResult\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nsrc/gnn/testing/test_round_trip.py:172: in <module>\n    from gnn.types import RoundTripResult, ComprehensiveTestReport\nsrc/gnn/__init__.py:13: in <module>\n    from .schema_validator import (\nsrc/gnn/schema_validator.py:43: in <module>\n    from .parsers import GNNParsingSystem\nsrc/gnn/parsers/__init__.py:49: in <module>\n    from .unified_parser import UnifiedGNNParser, GNNFormat, ParseResult\nsrc/gnn/parsers/unified_parser.py:18: in <module>\n    from .common import (\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1322: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:1262: in _find_spec\n    ???\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:100: in find_spec\n    if self._early_rewrite_bailout(name, state):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:211: in _early_rewrite_bailout\n    path = PurePath(*parts).with_suffix(\".py\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:227: in with_suffix\n    stem = self.stem\n           ^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:197: in stem\n    name = self.name\n           ^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:349: in name\n    tail = self._tail\n           ^^^^^^^^^^\nE   RecursionError: maximum recursion depth exceeded\n__________________ ERROR collecting src/tests/test_export.py ___________________\nsrc/render/pymdp/pymdp_renderer.py:26: in <module>\n    from ...gnn.parsers.markdown_parser import MarkdownGNNParser\nE   ImportError: attempted relative import beyond top-level package\n\nDuring handling of the above exception, another exception occurred:\nsrc/tests/test_export.py:6: in <module>\n    from render.render import render_gnn_spec\nsrc/render/__init__.py:14: in <module>\n    from .pymdp.pymdp_renderer import PyMdpRenderer, render_gnn_to_pymdp_impl\nsrc/render/pymdp/__init__.py:5: in <module>\n    from .pymdp_renderer import render_gnn_to_pymdp\nsrc/render/pymdp/pymdp_renderer.py:32: in <module>\n    from gnn.parsers.markdown_parser import MarkdownGNNParser\nsrc/gnn/__init__.py:13: in <module>\n    from .schema_validator import (\nsrc/gnn/schema_validator.py:43: in <module>\n    from .parsers import GNNParsingSystem\nsrc/gnn/parsers/__init__.py:49: in <module>\n    from .unified_parser import UnifiedGNNParser, GNNFormat, ParseResult\nsrc/gnn/parsers/unified_parser.py:18: in <module>\n    from .common import (\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1322: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:1262: in _find_spec\n    ???\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:100: in find_spec\n    if self._early_rewrite_bailout(name, state):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:211: in _early_rewrite_bailout\n    path = PurePath(*parts).with_suffix(\".py\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:227: in with_suffix\n    stem = self.stem\n           ^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:197: in stem\n    name = self.name\n           ^^^^^^^^^\nE   RecursionError: maximum recursion depth exceeded\n_____________ ERROR collecting src/tests/test_gnn_type_checker.py ______________\nImportError while importing test module '/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_gnn_type_checker.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/tests/test_gnn_type_checker.py:20: in <module>\n    from type_checker import GNNTypeChecker\nE   ImportError: cannot import name 'GNNTypeChecker' from 'type_checker' (/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/type_checker/__init__.py)\n___________ ERROR collecting src/tests/test_pipeline_performance.py ____________\nImportError while importing test module '/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_pipeline_performance.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/tests/test_pipeline_performance.py:26: in <module>\n    from . import (\nE   ImportError: cannot import name 'get_test_args' from 'src.tests' (/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/__init__.py)\n_____________ ERROR collecting src/tests/test_pipeline_recovery.py _____________\nImportError while importing test module '/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_pipeline_recovery.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/tests/test_pipeline_recovery.py:28: in <module>\n    from . import (\nE   ImportError: cannot import name 'get_test_args' from 'src.tests' (/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/__init__.py)\n___________ ERROR collecting src/tests/test_report_comprehensive.py ____________\nImportError while importing test module '/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_report_comprehensive.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/tests/test_report_comprehensive.py:17: in <module>\n    from report import (\nE   ImportError: cannot import name 'generate_comprehensive_report' from 'report' (/Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/report/__init__.py)\n___________________ ERROR collecting src/tests/test_sapf.py ____________________\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:310: in _tail\n    return self._tail_cached\n           ^^^^^^^^^^^^^^^^^\nE   AttributeError: 'pathlib._local.PurePosixPath' object has no attribute '_tail_cached'\n\nDuring handling of the above exception, another exception occurred:\nsrc/tests/test_sapf.py:30: in <module>\n    import numpy as np\n.venv/lib/python3.13/site-packages/numpy/__init__.py:181: in <module>\n    from . import lib\n.venv/lib/python3.13/site-packages/numpy/lib/__init__.py:23: in <module>\n    from . import _index_tricks_impl\n.venv/lib/python3.13/site-packages/numpy/lib/_index_tricks_impl.py:12: in <module>\n    import numpy.matrixlib as matrixlib\n.venv/lib/python3.13/site-packages/numpy/matrixlib/__init__.py:4: in <module>\n    from . import defmatrix\n.venv/lib/python3.13/site-packages/numpy/matrixlib/defmatrix.py:12: in <module>\n    from numpy.linalg import matrix_power\n.venv/lib/python3.13/site-packages/numpy/linalg/__init__.py:88: in <module>\n    from . import _linalg\n.venv/lib/python3.13/site-packages/numpy/linalg/_linalg.py:37: in <module>\n    from numpy.lib._twodim_base_impl import triu, eye\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1322: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:1262: in _find_spec\n    ???\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:100: in find_spec\n    if self._early_rewrite_bailout(name, state):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:211: in _early_rewrite_bailout\n    path = PurePath(*parts).with_suffix(\".py\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:227: in with_suffix\n    stem = self.stem\n           ^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:197: in stem\n    name = self.name\n           ^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:349: in name\n    tail = self._tail\n           ^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:312: in _tail\n    self._drv, self._root, self._tail_cached = self._parse_path(self._raw_path)\n                                                                ^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:286: in _raw_path\n    path = self.parser.join(*paths)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen posixpath>:78: in join\n    ???\nE   RecursionError: maximum recursion depth exceeded\n_______________ ERROR collecting src/tests/test_visualization.py _______________\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:310: in _tail\n    return self._tail_cached\n           ^^^^^^^^^^^^^^^^^\nE   AttributeError: 'pathlib._local.PurePosixPath' object has no attribute '_tail_cached'\n\nDuring handling of the above exception, another exception occurred:\nsrc/tests/test_visualization.py:9: in <module>\n    import numpy as np\n.venv/lib/python3.13/site-packages/numpy/__init__.py:181: in <module>\n    from . import lib\n.venv/lib/python3.13/site-packages/numpy/lib/__init__.py:23: in <module>\n    from . import _index_tricks_impl\n.venv/lib/python3.13/site-packages/numpy/lib/_index_tricks_impl.py:12: in <module>\n    import numpy.matrixlib as matrixlib\n.venv/lib/python3.13/site-packages/numpy/matrixlib/__init__.py:4: in <module>\n    from . import defmatrix\n.venv/lib/python3.13/site-packages/numpy/matrixlib/defmatrix.py:12: in <module>\n    from numpy.linalg import matrix_power\n.venv/lib/python3.13/site-packages/numpy/linalg/__init__.py:88: in <module>\n    from . import _linalg\n.venv/lib/python3.13/site-packages/numpy/linalg/_linalg.py:37: in <module>\n    from numpy.lib._twodim_base_impl import triu, eye\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1322: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:1262: in _find_spec\n    ???\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:100: in find_spec\n    if self._early_rewrite_bailout(name, state):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:211: in _early_rewrite_bailout\n    path = PurePath(*parts).with_suffix(\".py\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:227: in with_suffix\n    stem = self.stem\n           ^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:197: in stem\n    name = self.name\n           ^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:349: in name\n    tail = self._tail\n           ^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:312: in _tail\n    self._drv, self._root, self._tail_cached = self._parse_path(self._raw_path)\n                                                                ^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:286: in _raw_path\n    path = self.parser.join(*paths)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen posixpath>:78: in join\n    ???\nE   RecursionError: maximum recursion depth exceeded\n=============================== warnings summary ===============================\nsrc/tests/test_gnn_type_checker.py:16\n  /Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_gnn_type_checker.py:16: PytestUnknownMarkWarning: Unknown pytest.mark.type_checking - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytestmark = [pytest.mark.type_checking, pytest.mark.safe_to_fail, pytest.mark.fast]\n\nsrc/tests/test_main_orchestrator.py:36\n  /Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_main_orchestrator.py:36: PytestUnknownMarkWarning: Unknown pytest.mark.main_orchestrator - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytestmark = [pytest.mark.main_orchestrator, pytest.mark.safe_to_fail]\n\nsrc/tests/test_mcp_comprehensive.py:41\n  /Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_mcp_comprehensive.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.mcp - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytestmark = [pytest.mark.mcp, pytest.mark.safe_to_fail]\n\nsrc/tests/test_pipeline_scripts.py:34\n  /Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_pipeline_scripts.py:34: PytestUnknownMarkWarning: Unknown pytest.mark.pipeline - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytestmark = [pytest.mark.pipeline, pytest.mark.safe_to_fail]\n\nsrc/tests/test_pipeline_steps.py:32\n  /Users/4d/Documents/GitHub/GeneralizedNotationNotation/src/tests/test_pipeline_steps.py:32: PytestUnknownMarkWarning: Unknown pytest.mark.pipeline - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytestmark = [pytest.mark.pipeline, pytest.mark.safe_to_fail]\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR src/tests/test_comprehensive_api.py - RecursionError: maximum recursion...\nERROR src/tests/test_export.py - RecursionError: maximum recursion depth exce...\nERROR src/tests/test_gnn_type_checker.py\nERROR src/tests/test_pipeline_performance.py\nERROR src/tests/test_pipeline_recovery.py\nERROR src/tests/test_report_comprehensive.py\nERROR src/tests/test_sapf.py - RecursionError: maximum recursion depth exceeded\nERROR src/tests/test_visualization.py - RecursionError: maximum recursion dep...\n!!!!!!!!!!!!!!!!!!! Interrupted: 8 errors during collection !!!!!!!!!!!!!!!!!!!!\n======================== 5 warnings, 8 errors in 0.79s =========================\n",
  "stderr": ""
}