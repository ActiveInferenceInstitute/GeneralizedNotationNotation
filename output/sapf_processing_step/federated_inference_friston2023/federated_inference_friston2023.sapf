; SAPF Audio Representation for GNN Model: federated_inference_friston2023
; Generated by SAPF-GNN Processor with Distinctive Audio Mapping
; Model characteristics: 0 states, 6 connections, 0 matrices
; Model signature: 115, Scale: [0 2 4 7 9], Tempo: 1.0

; Model Schema with Distinctive Audio Characteristics
{ :model_name "federated_inference_friston2023" :gnn_version "1.4" :complexity "moderate" :signature 115 } = model_schema
6011.63 = base_freq
[0 2 4 7 9] = model_scale
1.0 = model_tempo
0.3 = model_reverb

; State Space Oscillators
\generate_state_oscillators [

  ; Mix all state oscillators
  [] +/
] = state_oscillators

; Connection Routing
\generate_connection_audio [
  state_oscillators = base_signal

  ; G_a1 -> π_gaze_a1 (directed)
  base_signal .1 0 lfsaw .2 * 1 + * = base_signal
  ; G_a2 -> π_gaze_a2 (directed)
  base_signal .1 0 lfsaw .2 * 1 + * = base_signal
  ; G_a3 -> π_gaze_a3 (directed)
  base_signal .1 0 lfsaw .2 * 1 + * = base_signal
  ; π_gaze_a1 - u_gaze_a1 (undirected)
  base_signal dup .5 * + = base_signal
  ; π_gaze_a2 - u_gaze_a2 (undirected)
  base_signal dup .5 * + = base_signal
  ; π_gaze_a3 - u_gaze_a3 (undirected)
  base_signal dup .5 * + = base_signal
  base_signal
] = connection_audio

; Matrix-based Audio Processing
\generate_matrix_audio [
  connection_audio = signal

  signal
] = matrix_audio

; Temporal Structure
\generate_temporal_audio [
  10 = time_horizon

  ; Discrete time - stepped envelope
  time_horizon sec 0 1 1 0 env = time_env
  matrix_audio time_env *
] = temporal_audio


; Final Audio Generation with Model-Specific Processing
\generate_final_audio [
  ; Combine all audio elements with model characteristics
  state_oscillators connection_audio + matrix_audio + temporal_audio +
  
  ; Apply model-specific scale quantization
  model_scale quantize
  
  ; Apply model-specific tempo modulation
  dup model_tempo lfnoise * +
  
  ; Apply model-specific reverb
  dup model_reverb 0.2 reverb +
  
  ; Apply model-specific volume and envelope
  .4 * 10 sec 0.10 1 0.8 0.50 env *
  
  ; Final model signature filtering
  dup 3005.8 highpass 0.3 * +
] = final_audio

; Execute and play audio
generate_final_audio !
final_audio play