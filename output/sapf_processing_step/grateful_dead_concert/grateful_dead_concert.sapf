; SAPF Audio Representation for GNN Model: grateful_dead_concert
; Generated by SAPF-GNN Processor with Distinctive Audio Mapping
; Model characteristics: 10 states, 0 connections, 0 matrices
; Model signature: 177, Scale: [0 2 4 7 9], Tempo: 0.8

; Model Schema with Distinctive Audio Characteristics
{ :model_name "grateful_dead_concert" :gnn_version "1.4" :complexity "complex" :signature 177 } = model_schema
9361.63 = base_freq
[0 2 4 7 9] = model_scale
0.8 = model_tempo
0.3 = model_reverb

; State Space Oscillators
\generate_state_oscillators [

  ; jerry_guitar_resonance (other, dims=[12, 1]) harmonic series
  [
    8 1 to [
      base_freq 1925 + 5 + i * 2 + sinosc i 1 + / 0.4 *
    ] +/
  ] = jerry_guitar_resonance_osc

  ; jerry_musical_intuition (other, dims=[8, 1]) harmonic series
  [
    8 1 to [
      base_freq 1900 + 10 + i * 2 + sinosc i 1 + / 0.4 *
    ] +/
  ] = jerry_musical_intuition_osc

  ; jerry_consciousness_level (other, continuous, dims=[3, 1])
  base_freq 1850 + 0 sinosc 0.4 * = jerry_consciousness_level_osc

  ; jerry_finger_positions (other, dims=[24, 1]) harmonic series
  [
    8 1 to [
      base_freq 2450 + 20 + i * 2 + sinosc i 1 + / 0.4 *
    ] +/
  ] = jerry_finger_positions_osc

  ; jerry_emotional_expression (other, dims=[6, 1]) harmonic series
  [
    7 1 to [
      base_freq 2075 + 25 + i * 2 + sinosc i 1 + / 0.4 *
    ] +/
  ] = jerry_emotional_expression_osc

  ; jerry_improvisation_flow (other, dims=[10, 1]) harmonic series
  [
    8 1 to [
      base_freq 2250 + 30 + i * 2 + sinosc i 1 + / 0.4 *
    ] +/
  ] = jerry_improvisation_flow_osc

  ; jerry_audience_connection (other, continuous, dims=[5, 1])
  base_freq 2200 + 0 sinosc 0.4 * = jerry_audience_connection_osc

  ; jerry_band_synchrony (other, continuous, dims=[5, 1])
  base_freq 2275 + 0 sinosc 0.4 * = jerry_band_synchrony_osc

  ; jerry_lyrical_inspiration (other, dims=[15, 1]) harmonic series
  [
    8 1 to [
      base_freq 2600 + 45 + i * 2 + sinosc i 1 + / 0.4 *
    ] +/
  ] = jerry_lyrical_inspiration_osc

  ; jerry_spiritual_channeling (other, continuous, dims=[4, 1])
  base_freq 2400 + 0 sinosc 0.4 * = jerry_spiritual_channeling_osc

  ; Mix all state oscillators
  [jerry_guitar_resonance_osc jerry_musical_intuition_osc jerry_consciousness_level_osc jerry_finger_positions_osc jerry_emotional_expression_osc jerry_improvisation_flow_osc jerry_audience_connection_osc jerry_band_synchrony_osc jerry_lyrical_inspiration_osc jerry_spiritual_channeling_osc] +/
] = state_oscillators

; Connection Routing
\generate_connection_audio [
  state_oscillators = base_signal

  base_signal
] = connection_audio

; Matrix-based Audio Processing
\generate_matrix_audio [
  connection_audio = signal

  signal
] = matrix_audio

; Temporal Structure
\generate_temporal_audio [
  10 = time_horizon

  ; Discrete time - stepped envelope
  time_horizon sec 0 1 1 0 env = time_env
  matrix_audio time_env *
] = temporal_audio


; Final Audio Generation with Model-Specific Processing
\generate_final_audio [
  ; Combine all audio elements with model characteristics
  state_oscillators connection_audio + matrix_audio + temporal_audio +
  
  ; Apply model-specific scale quantization
  model_scale quantize
  
  ; Apply model-specific tempo modulation
  dup model_tempo lfnoise * +
  
  ; Apply model-specific reverb
  dup model_reverb 0.2 reverb +
  
  ; Apply model-specific volume and envelope
  .4 * 10 sec 0.30 1 0.8 0.20 env *
  
  ; Final model signature filtering
  dup 4680.8 highpass 0.3 * +
] = final_audio

; Execute and play audio
generate_final_audio !
final_audio play