{
    "start_time": "2025-10-01T08:05:31.960289",
    "arguments": {
        "target_dir": "input/gnn_files",
        "output_dir": "output",
        "recursive": true,
        "verbose": false,
        "enable_round_trip": true,
        "enable_cross_format": true,
        "skip_steps": [],
        "only_steps": [],
        "strict": false,
        "estimate_resources": false,
        "ontology_terms_file": "src/ontology/act_inf_ontology_terms.json",
        "pipeline_summary_file": "output/pipeline_execution_summary.json",
        "llm_tasks": "all",
        "llm_timeout": 360,
        "website_html_filename": "gnn_pipeline_summary_website.html",
        "recreate_venv": false,
        "dev": false,
        "install_optional": null,
        "duration": 30.0,
        "audio_backend": "auto",
        "fast_only": false,
        "include_slow": false,
        "include_performance": false,
        "comprehensive": false,
        "performance_mode": "low"
    },
    "steps": [
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:32,005 - 0_template.py - INFO - Processing files from: input/gnn_files\n2025-10-01 08:05:32,005 - 0_template.py - INFO - Output directory: output/0_template_output\n2025-10-01 08:05:32,005 - 0_template.py - INFO - Recursive processing: True\n2025-10-01 08:05:32,005 - 0_template.py - INFO - Found 1 files to process\n2025-10-01 08:05:32,006 - 0_template.py - INFO - Summary report saved: output/0_template_output/template_processing_summary.json\n2025-10-01 08:05:32,006 - 0_template.py - INFO - \u2705 Successfully processed 1 files\n",
            "memory_usage_mb": 29.046875,
            "peak_memory_mb": 29.046875,
            "memory_delta_mb": 0.046875,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 1,
            "script_name": "0_template.py",
            "description": "Template initialization",
            "start_time": "2025-10-01T08:05:31.960589",
            "end_time": "2025-10-01T08:05:32.014493",
            "duration_seconds": 0.05390286445617676
        },
        {
            "status": "SUCCESS_WITH_WARNINGS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:32,063 - setup.setup - INFO - \ud83d\udd27 Starting comprehensive UV environment setup...\n2025-10-01 08:05:32,063 - setup.setup - INFO - \ud83d\udd0d Checking system requirements...\n2025-10-01 08:05:32,063 - setup.setup - INFO - \u2705 Python version check passed: 3.11.13\n2025-10-01 08:05:32,142 - setup.setup - INFO - \u2705 UV is available: uv 0.8.8 (Homebrew 2025-08-09)\n2025-10-01 08:05:32,142 - setup.setup - INFO - \u2705 Disk space check passed: 81.73GB free\n2025-10-01 08:05:32,142 - setup.setup - INFO - \u2713 Using existing UV environment at /Users/4d/Documents/GitHub/generalizednotationnotation/.venv\n2025-10-01 08:05:32,147 - setup.setup - INFO - \u2705 Existing environment is working: Python 3.11.13\n2025-10-01 08:05:32,163 - setup.setup - INFO - \u2705 Core packages are available in existing environment\n2025-10-01 08:05:32,164 - setup.setup - INFO - \ud83d\udce6 Installing core dependencies...\n2025-10-01 08:05:32,164 - setup.setup - INFO - \ud83d\udce6 Installing dependencies from /Users/4d/Documents/GitHub/generalizednotationnotation/pyproject.toml using UV sync\n2025-10-01 08:05:33,990 - setup.setup - ERROR - \u274c Failed to install dependencies via uv sync\n2025-10-01 08:05:33,990 - setup.setup - WARNING - \u26a0\ufe0f Core dependency installation had issues, but continuing...\n2025-10-01 08:05:33,990 - setup.setup - INFO - \u2705 Validating environment...\n2025-10-01 08:05:33,990 - setup.setup - INFO - \ud83d\udd0d Checking system requirements...\n2025-10-01 08:05:33,990 - setup.setup - INFO - \u2705 Python version check passed: 3.11.13\n2025-10-01 08:05:34,045 - setup.setup - INFO - \u2705 UV is available: uv 0.8.8 (Homebrew 2025-08-09)\n2025-10-01 08:05:34,046 - setup.setup - INFO - \u2705 Disk space check passed: 81.73GB free\n2025-10-01 08:05:34,046 - setup.setup - INFO - \ud83d\udccb Getting list of installed packages using UV...\n2025-10-01 08:05:34,106 - setup.setup - INFO - \ud83d\udce6 Found 176 installed packages using UV\n2025-10-01 08:05:34,106 - setup.setup - INFO - \ud83d\udccb Key installed packages:\n2025-10-01 08:05:34,106 - setup.setup - INFO -   - pytest: 8.4.1\n2025-10-01 08:05:34,106 - setup.setup - INFO -   - numpy: 2.2.6\n2025-10-01 08:05:34,106 - setup.setup - INFO -   - matplotlib: 3.10.5\n2025-10-01 08:05:34,106 - setup.setup - INFO -   - scipy: 1.16.1\n2025-10-01 08:05:34,107 - setup.setup - INFO - \ud83d\udcc4 Full package list saved to: /Users/4d/Documents/GitHub/generalizednotationnotation/.venv/installed_packages_uv.json\n2025-10-01 08:05:34,493 - setup.setup - INFO - \u2705 GNN environment setup completed successfully using UV\n",
            "memory_usage_mb": 29.078125,
            "peak_memory_mb": 29.078125,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 2,
            "script_name": "1_setup.py",
            "description": "Environment setup",
            "start_time": "2025-10-01T08:05:32.015091",
            "end_time": "2025-10-01T08:05:34.540327",
            "duration_seconds": 2.5252320766448975
        },
        {
            "status": "FAILED",
            "stdout": "",
            "stderr": "2025-10-01 08:05:34,647 - 2_tests.py - INFO - \ud83e\uddea Running fast test suite\n2025-10-01 08:05:34,647 - 2_tests.py - INFO - \ud83d\ude80 Running comprehensive test suite\n2025-10-01 08:05:34,677 - 2_tests.py - INFO - \u2705 All test dependencies available\n2025-10-01 08:05:35,183 - 2_tests.py - ERROR - \u274c Tests failed: 0/0 tests\n",
            "memory_usage_mb": 29.109375,
            "peak_memory_mb": 29.109375,
            "memory_delta_mb": 0.015625,
            "exit_code": 1,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 3,
            "script_name": "2_tests.py",
            "description": "Test suite execution",
            "start_time": "2025-10-01T08:05:34.540787",
            "end_time": "2025-10-01T08:05:35.204050",
            "duration_seconds": 0.6632609367370605
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:35,252 - 3_gnn.py - INFO - \ud83d\ude80 Processing GNN files with full multi-format generation\n2025-10-01 08:05:35,270 - 3_gnn.py - INFO - Initialized GNN parsing system with 22 supported formats\n2025-10-01 08:05:35,270 - 3_gnn.py - INFO - Available serializers: [<GNNFormat.MARKDOWN: 'markdown'>, <GNNFormat.JSON: 'json'>, <GNNFormat.XML: 'xml'>, <GNNFormat.YAML: 'yaml'>, <GNNFormat.SCALA: 'scala'>, <GNNFormat.PROTOBUF: 'protobuf'>, <GNNFormat.PKL: 'pkl'>, <GNNFormat.XSD: 'xsd'>, <GNNFormat.ASN1: 'asn1'>, <GNNFormat.LEAN: 'lean'>, <GNNFormat.COQ: 'coq'>, <GNNFormat.PYTHON: 'python'>, <GNNFormat.BNF: 'bnf'>, <GNNFormat.EBNF: 'ebnf'>, <GNNFormat.ISABELLE: 'isabelle'>, <GNNFormat.MAXIMA: 'maxima'>, <GNNFormat.ALLOY: 'alloy'>, <GNNFormat.Z_NOTATION: 'z_notation'>, <GNNFormat.TLA_PLUS: 'tla_plus'>, <GNNFormat.AGDA: 'agda'>, <GNNFormat.HASKELL: 'haskell'>, <GNNFormat.PICKLE: 'pickle'>]\n2025-10-01 08:05:35,271 - 3_gnn.py - INFO - Found 1 potential GNN files\n2025-10-01 08:05:35,271 - 3_gnn.py - INFO - Processing: input/gnn_files/actinf_pomdp_agent.md\n2025-10-01 08:05:35,282 - 3_gnn.py - INFO - Generated 22 formats for actinf_pomdp_agent.md\n2025-10-01 08:05:35,282 - 3_gnn.py - INFO - \u2705 Processed 1 files, generated 22 format instances across 22 formats\n",
            "memory_usage_mb": 29.109375,
            "peak_memory_mb": 29.109375,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 4,
            "script_name": "3_gnn.py",
            "description": "GNN file processing",
            "start_time": "2025-10-01T08:05:35.204150",
            "end_time": "2025-10-01T08:05:35.292246",
            "duration_seconds": 0.08809185028076172
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "",
            "memory_usage_mb": 29.109375,
            "peak_memory_mb": 29.109375,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 5,
            "script_name": "4_model_registry.py",
            "description": "Model registry",
            "start_time": "2025-10-01T08:05:35.292533",
            "end_time": "2025-10-01T08:05:35.347686",
            "duration_seconds": 0.05515122413635254
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:35,392 - type_checker - INFO - \ud83d\ude80 Processing type checker\n2025-10-01 08:05:35,395 - type_checker - INFO - \u2705 Type checking completed successfully\n",
            "memory_usage_mb": 29.109375,
            "peak_memory_mb": 29.109375,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 6,
            "script_name": "5_type_checker.py",
            "description": "Type checking",
            "start_time": "2025-10-01T08:05:35.347953",
            "end_time": "2025-10-01T08:05:35.403272",
            "duration_seconds": 0.05531716346740723
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:35,451 - validation - INFO - Loaded 1 parsed GNN files\n2025-10-01 08:05:35,451 - validation - INFO - Validating: actinf_pomdp_agent.md\n2025-10-01 08:05:35,451 - validation - INFO - Loaded parsed GNN specification from output/3_gnn_output/actinf_pomdp_agent/actinf_pomdp_agent_parsed.json\n2025-10-01 08:05:35,451 - validation - INFO - Semantic validation completed for actinf_pomdp_agent.md\n2025-10-01 08:05:35,451 - validation - INFO - Performance profiling completed for actinf_pomdp_agent.md\n2025-10-01 08:05:35,451 - validation - INFO - Consistency checking completed for actinf_pomdp_agent.md\n2025-10-01 08:05:35,451 - validation - INFO - Validation processing completed:\n2025-10-01 08:05:35,451 - validation - INFO -   Total files: 1\n2025-10-01 08:05:35,451 - validation - INFO -   Successful validations: 1\n2025-10-01 08:05:35,451 - validation - INFO -   Failed validations: 0\n2025-10-01 08:05:35,451 - validation - INFO -   Average semantic score: 1.00\n2025-10-01 08:05:35,451 - validation - INFO -   Average performance score: 0.70\n2025-10-01 08:05:35,451 - validation - INFO -   Average consistency score: 1.00\n",
            "memory_usage_mb": 29.125,
            "peak_memory_mb": 29.125,
            "memory_delta_mb": 0.015625,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 7,
            "script_name": "6_validation.py",
            "description": "Validation",
            "start_time": "2025-10-01T08:05:35.403533",
            "end_time": "2025-10-01T08:05:35.459565",
            "duration_seconds": 0.05602908134460449
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:35,507 - export - INFO - Loaded 1 parsed GNN files\n2025-10-01 08:05:35,507 - export - INFO - Exporting: actinf_pomdp_agent.md\n2025-10-01 08:05:35,507 - export - INFO - Loaded parsed GNN specification from output/3_gnn_output/actinf_pomdp_agent/actinf_pomdp_agent_parsed.json\n2025-10-01 08:05:35,508 - export - INFO - Generated json export for actinf_pomdp_agent.md\n2025-10-01 08:05:35,509 - export - INFO - Generated xml export for actinf_pomdp_agent.md\n2025-10-01 08:05:35,510 - export - INFO - Generated graphml export for actinf_pomdp_agent.md\n2025-10-01 08:05:35,510 - export - INFO - Generated gexf export for actinf_pomdp_agent.md\n2025-10-01 08:05:35,510 - export - INFO - Generated pickle export for actinf_pomdp_agent.md\n2025-10-01 08:05:35,510 - export - INFO - Export processing completed:\n2025-10-01 08:05:35,510 - export - INFO -   Total files: 1\n2025-10-01 08:05:35,510 - export - INFO -   Successful exports: 1\n2025-10-01 08:05:35,510 - export - INFO -   Failed exports: 0\n2025-10-01 08:05:35,511 - export - INFO -   Formats generated: {'json': 1, 'xml': 1, 'graphml': 1, 'gexf': 1, 'pickle': 1}\n",
            "memory_usage_mb": 29.125,
            "peak_memory_mb": 29.125,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 8,
            "script_name": "7_export.py",
            "description": "Multi-format export",
            "start_time": "2025-10-01T08:05:35.459877",
            "end_time": "2025-10-01T08:05:35.518921",
            "duration_seconds": 0.05904197692871094
        },
        {
            "status": "SUCCESS",
            "stdout": "DEBUG: Creating POMDP analysis for tensor shape: (3, 3, 3)\nDEBUG: Figure created successfully\nDEBUG: Using simple subplot layout\nDEBUG: Error saving POMDP analysis: __init__(): incompatible constructor arguments. The following argument types are supported:\n    1. matplotlib.backends._backend_agg.RendererAgg(width: typing.SupportsInt, height: typing.SupportsInt, dpi: typing.SupportsFloat)\n\nInvoked with: 1081, 18189472529, 96\nDEBUG: POMDP analysis saved with fallback DPI\n",
            "stderr": "2025-10-01 08:05:36,829 - visualization - INFO - Loaded 1 parsed GNN files\n2025-10-01 08:05:36,829 - visualization - INFO - Visualizing: actinf_pomdp_agent.md\n2025-10-01 08:05:36,829 - visualization - INFO - Loaded parsed GNN specification from output/3_gnn_output/actinf_pomdp_agent/actinf_pomdp_agent_parsed.json\n2025-10-01 08:05:37,790 - visualization - INFO - Matrix visualization completed for actinf_pomdp_agent.md\n2025-10-01 08:05:37,790 - visualization - INFO - Network visualization completed for actinf_pomdp_agent.md\n2025-10-01 08:05:37,991 - visualization - INFO - Combined visualization completed for actinf_pomdp_agent.md\n2025-10-01 08:05:37,992 - visualization - INFO - Visualization processing completed:\n2025-10-01 08:05:37,992 - visualization - INFO -   Total files: 1\n2025-10-01 08:05:37,992 - visualization - INFO -   Successful visualizations: 1\n2025-10-01 08:05:37,992 - visualization - INFO -   Failed visualizations: 0\n2025-10-01 08:05:37,992 - visualization - INFO -   Total images generated: 5\n2025-10-01 08:05:37,992 - visualization - INFO -   Visualization types: {'matrix': 1, 'network': 1, 'combined': 1}\n",
            "memory_usage_mb": 29.15625,
            "peak_memory_mb": 29.15625,
            "memory_delta_mb": 0.03125,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 9,
            "script_name": "8_visualization.py",
            "description": "Visualization",
            "start_time": "2025-10-01T08:05:35.519204",
            "end_time": "2025-10-01T08:05:38.113136",
            "duration_seconds": 2.593930959701538
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:38,343 - 9_advanced_viz.py - INFO - ================================================================================\n2025-10-01 08:05:38,343 - 9_advanced_viz.py - INFO - ADVANCED VISUALIZATION PROCESSING\n2025-10-01 08:05:38,343 - 9_advanced_viz.py - INFO - ================================================================================\n2025-10-01 08:05:38,762 - 9_advanced_viz.py - INFO - Looking for GNN output in: output/3_gnn_output\n2025-10-01 08:05:38,762 - 9_advanced_viz.py - INFO - Looking for results file: output/3_gnn_output/gnn_processing_results.json (exists: True)\n2025-10-01 08:05:38,762 - 9_advanced_viz.py - INFO - Found 1 processed files in results\n2025-10-01 08:05:38,762 - 9_advanced_viz.py - INFO - Loaded parsed model: actinf_pomdp_agent\n2025-10-01 08:05:38,762 - 9_advanced_viz.py - INFO - Processing advanced visualizations for: actinf_pomdp_agent\n2025-10-01 08:05:38,900 - 9_advanced_viz.py - INFO - Generated 3D visualization: output/9_advanced_viz_output/actinf_pomdp_agent_3d_visualization.png\n2025-10-01 08:05:39,035 - 9_advanced_viz.py - INFO - Generated statistical plots: output/9_advanced_viz_output/actinf_pomdp_agent_statistical_analysis.png\n2025-10-01 08:05:39,035 - 9_advanced_viz.py - INFO - Saved advanced visualization summary: output/9_advanced_viz_output/advanced_viz_summary.json\n2025-10-01 08:05:39,035 - 9_advanced_viz.py - INFO - Advanced visualization complete:\n2025-10-01 08:05:39,035 - 9_advanced_viz.py - INFO -   Total attempts: 2\n2025-10-01 08:05:39,035 - 9_advanced_viz.py - INFO -   Successful: 2\n2025-10-01 08:05:39,036 - 9_advanced_viz.py - INFO -   Failed: 0\n2025-10-01 08:05:39,036 - 9_advanced_viz.py - INFO -   Skipped: 0\n2025-10-01 08:05:39,036 - 9_advanced_viz.py - INFO -   Output files: 2\n",
            "memory_usage_mb": 29.15625,
            "peak_memory_mb": 29.15625,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 10,
            "script_name": "9_advanced_viz.py",
            "description": "Advanced visualization",
            "start_time": "2025-10-01T08:05:38.113436",
            "end_time": "2025-10-01T08:05:39.169082",
            "duration_seconds": 1.0556440353393555
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:39,217 - ontology - INFO - \ud83d\ude80 Processing ontology\n2025-10-01 08:05:39,219 - ontology - INFO - \u2705 Ontology processing completed successfully\n",
            "memory_usage_mb": 29.1875,
            "peak_memory_mb": 29.1875,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 11,
            "script_name": "10_ontology.py",
            "description": "Ontology processing",
            "start_time": "2025-10-01T08:05:39.169386",
            "end_time": "2025-10-01T08:05:39.227094",
            "duration_seconds": 0.05770611763000488
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:39,307 - render.processor - INFO - \ud83d\ude80 Starting POMDP-aware render processing\n2025-10-01 08:05:39,307 - render.processor - INFO - Processing GNN files in: input/gnn_files\n2025-10-01 08:05:39,307 - render.processor - INFO - Output directory: output/11_render_output\n2025-10-01 08:05:39,308 - render.processor - INFO - Found 1 GNN files to process\n2025-10-01 08:05:39,308 - render.processor - INFO - Target frameworks: all available\n2025-10-01 08:05:39,308 - render.processor - INFO - \ud83d\udcc1 Processing: input/gnn_files/actinf_pomdp_agent.md\n2025-10-01 08:05:39,309 - render.processor - INFO - \u2705 Extracted POMDP 'Classic Active Inference POMDP Agent v1' with 3 states, 3 observations, 1 actions\n2025-10-01 08:05:39,309 - render.pomdp_processor - INFO - Processing POMDP 'Classic Active Inference POMDP Agent v1' for frameworks: ['pymdp', 'rxinfer', 'activeinference_jl', 'jax', 'discopy']\n2025-10-01 08:05:39,309 - render.pomdp_processor - INFO - Processing framework: pymdp\n2025-10-01 08:05:39,309 - render.pomdp_processor - INFO - Created documentation: output/11_render_output/actinf_pomdp_agent/pymdp/README.md\n2025-10-01 08:05:39,309 - render.pomdp_processor - INFO - \u2705 pymdp: Generated PyMDP simulation script: output/11_render_output/actinf_pomdp_agent/pymdp/Classic Active Inference POMDP Agent v1_pymdp.py\n2025-10-01 08:05:39,309 - render.pomdp_processor - INFO - Processing framework: rxinfer\n2025-10-01 08:05:39,310 - render.pomdp_processor - INFO - Created documentation: output/11_render_output/actinf_pomdp_agent/rxinfer/README.md\n2025-10-01 08:05:39,310 - render.pomdp_processor - INFO - \u2705 rxinfer: Generated RxInfer.jl simulation script: output/11_render_output/actinf_pomdp_agent/rxinfer/Classic Active Inference POMDP Agent v1_rxinfer.jl\n2025-10-01 08:05:39,310 - render.pomdp_processor - INFO - Processing framework: activeinference_jl\n2025-10-01 08:05:39,310 - render.activeinference_jl.activeinference_renderer - INFO - Rendering GNN specification to ActiveInference.jl script for model: Classic Active Inference POMDP Agent v1\n2025-10-01 08:05:39,310 - render.activeinference_jl.activeinference_renderer - INFO - Successfully rendered ActiveInference.jl script to Classic Active Inference POMDP Agent v1_activeinference.jl\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - Created documentation: output/11_render_output/actinf_pomdp_agent/activeinference_jl/README.md\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - \u2705 activeinference_jl: Successfully rendered ActiveInference.jl script to Classic Active Inference POMDP Agent v1_activeinference.jl\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - Processing framework: jax\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - Extracting matrices from POMDP processor format\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - Extracted variable dimensions: {n_states: 3, n_obs: 3, n_actions: 1}\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - Created default matrices: A=(3, 3), B=(3, 3, 1), C=(3,), D=(3,)\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - Found initialparameterization, extracting actual matrix values\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - Successfully extracted A matrix: shape (3, 3)\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - Successfully extracted C vector: shape (3,)\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - Successfully extracted D vector: shape (3,)\n2025-10-01 08:05:39,311 - render.jax.jax_renderer - INFO - JAX model code written to output/11_render_output/actinf_pomdp_agent/jax/Classic Active Inference POMDP Agent v1_jax.py\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - Created documentation: output/11_render_output/actinf_pomdp_agent/jax/README.md\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - \u2705 jax: JAX model code generated successfully.\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - Processing framework: discopy\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - Created documentation: output/11_render_output/actinf_pomdp_agent/discopy/README.md\n2025-10-01 08:05:39,311 - render.pomdp_processor - INFO - \u2705 discopy: Generated DisCoPy categorical diagram script: output/11_render_output/actinf_pomdp_agent/discopy/Classic Active Inference POMDP Agent v1_discopy.py\n2025-10-01 08:05:39,311 - render.processor - INFO - \u2705 Successfully processed actinf_pomdp_agent.md\n2025-10-01 08:05:39,312 - render.processor - INFO - Created overview documentation: output/11_render_output/README.md\n2025-10-01 08:05:39,312 - render.processor - INFO - \ud83c\udf89 Render processing completed!\n2025-10-01 08:05:39,312 - render.processor - INFO - \ud83d\udcca Files: 1/1 successful\n2025-10-01 08:05:39,312 - render.processor - INFO - \ud83e\udde0 Framework renderings: 5/5 successful (100.0%)\n2025-10-01 08:05:39,312 - render.processor - INFO - \ud83d\udcc4 Summary saved to: output/11_render_output/render_processing_summary.json\n",
            "memory_usage_mb": 29.1875,
            "peak_memory_mb": 29.1875,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 12,
            "script_name": "11_render.py",
            "description": "Code rendering",
            "start_time": "2025-10-01T08:05:39.227370",
            "end_time": "2025-10-01T08:05:39.324769",
            "duration_seconds": 0.0973978042602539
        },
        {
            "status": "SUCCESS_WITH_WARNINGS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:39,931 - root - WARNING - PyMDP not available - simulation will gracefully degrade with informative output\n2025-10-01 08:05:40,213 - execute - INFO - \ud83d\ude80 Processing execute - searching for rendered implementations\n2025-10-01 08:05:40,215 - execute - INFO - Found render output directory: output/11_render_output\n2025-10-01 08:05:40,216 - execute - INFO - Found 5 executable scripts to run\n2025-10-01 08:05:41,210 - execute - ERROR - \u274c Script Classic Active Inference POMDP Agent v1_pymdp.py failed with return code 1\n2025-10-01 08:05:41,210 - execute - ERROR - Error output: WARNING:root:PyMDP not available - simulation will gracefully degrade with informative output\nERROR:__main__:Unexpected error: execute_pymdp_simulation() got an unexpected keyword argument 'config_ove...\n2025-10-01 08:05:41,997 - execute - INFO - \u2705 Successfully executed Classic Active Inference POMDP Agent v1_jax.py\n2025-10-01 08:05:42,274 - execute - ERROR - \u274c Script Classic Active Inference POMDP Agent v1_discopy.py failed with return code 1\n2025-10-01 08:05:42,274 - execute - ERROR - Error output: Traceback (most recent call last):\n  File \"/Users/4d/Documents/GitHub/generalizednotationnotation/output/11_render_output/actinf_pomdp_agent/discopy/Classic Active Inference POMDP Agent v1_discopy.py\"...\n2025-10-01 08:05:50,377 - execute - ERROR - \u274c Script Classic Active Inference POMDP Agent v1_rxinfer.jl failed with return code 1\n2025-10-01 08:05:56,698 - execute - ERROR - \u274c Script Classic Active Inference POMDP Agent v1_activeinference.jl failed with return code 1\n2025-10-01 08:05:56,698 - execute - ERROR - Error output: ERROR: LoadError: ParseError:\n# Error @ /Users/4d/Documents/GitHub/generalizednotationnotation/output/11_render_output/actinf_pomdp_agent/activeinference_jl/Classic Active Inference POMDP Agent v1_act...\n2025-10-01 08:05:56,699 - execute - INFO - Generated execution report: output/12_execute_output/execution_results/execution_report.md\n2025-10-01 08:05:56,699 - execute - WARNING - \u26a0\ufe0f Execute processing completed with 4 failures\n",
            "memory_usage_mb": 21.25,
            "peak_memory_mb": 29.203125,
            "memory_delta_mb": -7.953125,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 13,
            "script_name": "12_execute.py",
            "description": "Execution",
            "start_time": "2025-10-01T08:05:39.325145",
            "end_time": "2025-10-01T08:05:56.841147",
            "duration_seconds": 17.516000032424927
        },
        {
            "status": "SUCCESS_WITH_WARNINGS",
            "stdout": "",
            "stderr": "2025-10-01 08:05:56,924 - llm.llm_processor - INFO - Loaded API keys for providers: ['openai', 'ollama']\n2025-10-01 08:05:56,924 - llm.llm_operations - INFO - Created new LLM processor\n2025-10-01 08:05:56,925 - llm - INFO - \ud83d\ude80 Processing LLM\n2025-10-01 08:05:56,952 - llm - INFO - \u2705 Ollama is running and ready\n2025-10-01 08:05:56,952 - llm - INFO - Available Ollama models: llama3.1:latest, smollm2:135m-instruct-q4_K_S, smollm:135m\n2025-10-01 08:05:57,234 - llm.providers.openai_provider - INFO - OpenAI provider initialized successfully\n2025-10-01 08:05:57,234 - llm.llm_processor - INFO - Initialized openai provider\n2025-10-01 08:05:57,286 - llm.providers.openrouter_provider - WARNING - OpenRouter API key not provided\n2025-10-01 08:05:57,286 - llm.llm_processor - WARNING - Failed to initialize openrouter provider\n2025-10-01 08:05:57,286 - llm.providers.perplexity_provider - WARNING - Perplexity API key not provided\n2025-10-01 08:05:57,286 - llm.llm_processor - WARNING - Failed to initialize perplexity provider\n2025-10-01 08:05:57,287 - llm.providers.ollama_provider - INFO - Ollama provider initialized (CLI fallback)\n2025-10-01 08:05:57,287 - llm.llm_processor - INFO - Initialized ollama provider\n2025-10-01 08:05:57,287 - llm.llm_processor - INFO - LLM Processor initialized with 2 providers\n2025-10-01 08:05:57,289 - llm.llm_processor - INFO - Loaded API keys for providers: ['openai', 'ollama']\n2025-10-01 08:05:57,289 - llm.llm_operations - INFO - Created new LLM processor\n2025-10-01 08:05:57,300 - llm.providers.openai_provider - INFO - OpenAI provider initialized successfully\n2025-10-01 08:05:57,300 - llm.llm_processor - INFO - Initialized openai provider\n2025-10-01 08:05:57,300 - llm.providers.openrouter_provider - WARNING - OpenRouter API key not provided\n2025-10-01 08:05:57,300 - llm.llm_processor - WARNING - Failed to initialize openrouter provider\n2025-10-01 08:05:57,300 - llm.providers.perplexity_provider - WARNING - Perplexity API key not provided\n2025-10-01 08:05:57,300 - llm.llm_processor - WARNING - Failed to initialize perplexity provider\n2025-10-01 08:05:57,300 - llm.providers.ollama_provider - INFO - Ollama provider initialized (CLI fallback)\n2025-10-01 08:05:57,300 - llm.llm_processor - INFO - Initialized ollama provider\n2025-10-01 08:05:57,300 - llm.llm_processor - INFO - LLM Processor initialized with 2 providers\n2025-10-01 08:05:57,691 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:05:57,692 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:05:57,692 - llm.llm_processor - ERROR - Analysis failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:05:59,115 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:05:59,117 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:05:59,117 - llm.llm_processor - WARNING - Fallback failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:06:02,847 - llm - INFO - Running structured prompt 1/6: summarize_content for actinf_pomdp_agent.md\n2025-10-01 08:06:02,851 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:06:03,769 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:06:03,770 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:06:03,770 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:06:03,770 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:06:04,203 - llm - INFO - Running structured prompt 2/6: explain_model for actinf_pomdp_agent.md\n2025-10-01 08:06:04,203 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:06:04,207 - openai._base_client - INFO - Retrying request to /chat/completions in 0.499551 seconds\n2025-10-01 08:06:04,974 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:06:04,975 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:06:04,975 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:06:04,975 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:06:11,153 - llm - INFO - Running structured prompt 3/6: identify_components for actinf_pomdp_agent.md\n2025-10-01 08:06:11,153 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:06:11,154 - openai._base_client - INFO - Retrying request to /chat/completions in 0.447469 seconds\n2025-10-01 08:06:11,889 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:06:11,891 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:06:11,891 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:06:11,891 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:07:04,224 - utils.timeout_manager - WARNING - llm_prompt_identify_components timed out on attempt 1\n2025-10-01 08:07:07,225 - utils.timeout_manager - INFO - Retry 1 for llm_prompt_identify_components with timeout 106.1s\n2025-10-01 08:07:07,225 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:07:07,515 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:07:07,516 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:07:07,516 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:07:07,516 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:07:13,502 - llm - INFO - Running structured prompt 4/6: analyze_structure for actinf_pomdp_agent.md\n2025-10-01 08:07:13,502 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:07:13,505 - openai._base_client - INFO - Retrying request to /chat/completions in 0.391604 seconds\n2025-10-01 08:07:14,256 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:07:14,257 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:07:14,257 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:07:14,257 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:08:04,883 - utils.timeout_manager - WARNING - llm_prompt_analyze_structure timed out on attempt 1\n2025-10-01 08:08:07,885 - utils.timeout_manager - INFO - Retry 1 for llm_prompt_analyze_structure with timeout 102.8s\n2025-10-01 08:08:07,885 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:08:08,228 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:08:08,229 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:08,229 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:08,230 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:08:14,953 - llm - INFO - Running structured prompt 5/6: extract_parameters for actinf_pomdp_agent.md\n2025-10-01 08:08:14,953 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:08:14,956 - openai._base_client - INFO - Retrying request to /chat/completions in 0.427237 seconds\n2025-10-01 08:08:15,557 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:08:15,558 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:15,558 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:15,558 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:08:18,678 - llm - INFO - Running structured prompt 6/6: practical_applications for actinf_pomdp_agent.md\n2025-10-01 08:08:18,678 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:08:18,680 - openai._base_client - INFO - Retrying request to /chat/completions in 0.468505 seconds\n2025-10-01 08:08:19,340 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:08:19,341 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:19,341 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:19,341 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:08:20,887 - llm - INFO - Running custom prompt: technical_description for actinf_pomdp_agent.md\n2025-10-01 08:08:20,887 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:08:20,890 - openai._base_client - INFO - Retrying request to /chat/completions in 0.472429 seconds\n2025-10-01 08:08:21,611 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:08:21,612 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:21,612 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:21,612 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:08:22,932 - llm - INFO - Running custom prompt: nontechnical_description for actinf_pomdp_agent.md\n2025-10-01 08:08:22,933 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:08:22,936 - openai._base_client - INFO - Retrying request to /chat/completions in 0.376074 seconds\n2025-10-01 08:08:23,582 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:08:23,582 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:23,582 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:23,583 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:08:25,495 - llm - INFO - Running custom prompt: runtime_behavior for actinf_pomdp_agent.md\n2025-10-01 08:08:25,496 - llm.providers.openai_provider - WARNING - Model smollm2:135m-instruct-q4_K_S not in available models list\n2025-10-01 08:08:25,499 - openai._base_client - INFO - Retrying request to /chat/completions in 0.389488 seconds\n2025-10-01 08:08:26,126 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 401 Unauthorized\"\n2025-10-01 08:08:26,127 - llm.providers.openai_provider - ERROR - OpenAI API call failed: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:26,127 - llm.llm_processor - ERROR - Response generation failed with openai: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************psgA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n2025-10-01 08:08:26,127 - llm.llm_processor - INFO - Trying fallback provider: ollama\n2025-10-01 08:08:27,125 - llm - INFO - \u2705 LLM processing completed successfully\n",
            "memory_usage_mb": 21.875,
            "peak_memory_mb": 21.875,
            "memory_delta_mb": 0.4375,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 14,
            "script_name": "13_llm.py",
            "description": "LLM processing",
            "start_time": "2025-10-01T08:05:56.841443",
            "end_time": "2025-10-01T08:08:27.203834",
            "duration_seconds": 150.36239004135132
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,276 - ml_integration - INFO - Processing ml_integration for files in input/gnn_files\n2025-10-01 08:08:27,276 - ml_integration - INFO - Ml_Integration processing completed\n",
            "memory_usage_mb": 22.015625,
            "peak_memory_mb": 22.015625,
            "memory_delta_mb": 0.046875,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 15,
            "script_name": "14_ml_integration.py",
            "description": "ML integration",
            "start_time": "2025-10-01T08:08:27.204132",
            "end_time": "2025-10-01T08:08:27.284348",
            "duration_seconds": 0.08021402359008789
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,370 - audio - INFO - Processing audio for files in input/gnn_files\n2025-10-01 08:08:27,370 - audio - INFO - Audio processing completed\n",
            "memory_usage_mb": 22.03125,
            "peak_memory_mb": 22.03125,
            "memory_delta_mb": 0.015625,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 16,
            "script_name": "15_audio.py",
            "description": "Audio processing",
            "start_time": "2025-10-01T08:08:27.284613",
            "end_time": "2025-10-01T08:08:27.380018",
            "duration_seconds": 0.09540295600891113
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,446 - analysis - INFO - Processing analysis for files in input/gnn_files\n2025-10-01 08:08:27,446 - analysis - INFO - Analysis processing completed\n",
            "memory_usage_mb": 22.03125,
            "peak_memory_mb": 22.03125,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 17,
            "script_name": "16_analysis.py",
            "description": "Analysis",
            "start_time": "2025-10-01T08:08:27.380303",
            "end_time": "2025-10-01T08:08:27.456220",
            "duration_seconds": 0.07591390609741211
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,502 - integration - INFO - Processing integration for files in input/gnn_files\n2025-10-01 08:08:27,502 - integration - INFO - Integration processing completed\n",
            "memory_usage_mb": 22.03125,
            "peak_memory_mb": 22.03125,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 18,
            "script_name": "17_integration.py",
            "description": "Integration",
            "start_time": "2025-10-01T08:08:27.456523",
            "end_time": "2025-10-01T08:08:27.511510",
            "duration_seconds": 0.054986000061035156
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,558 - security - INFO - Processing security for files in input/gnn_files\n2025-10-01 08:08:27,558 - security - INFO - Security processing completed\n",
            "memory_usage_mb": 22.046875,
            "peak_memory_mb": 22.046875,
            "memory_delta_mb": 0.015625,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 19,
            "script_name": "18_security.py",
            "description": "Security",
            "start_time": "2025-10-01T08:08:27.511779",
            "end_time": "2025-10-01T08:08:27.567126",
            "duration_seconds": 0.05534482002258301
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,615 - research - INFO - Processing research for files in input/gnn_files\n2025-10-01 08:08:27,615 - research - INFO - Research processing completed\n",
            "memory_usage_mb": 22.046875,
            "peak_memory_mb": 22.046875,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 20,
            "script_name": "19_research.py",
            "description": "Research",
            "start_time": "2025-10-01T08:08:27.567440",
            "end_time": "2025-10-01T08:08:27.623588",
            "duration_seconds": 0.05614519119262695
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,671 - website - INFO - Website generated successfully with 1 pages\n",
            "memory_usage_mb": 22.046875,
            "peak_memory_mb": 22.046875,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 21,
            "script_name": "20_website.py",
            "description": "Website generation",
            "start_time": "2025-10-01T08:08:27.623889",
            "end_time": "2025-10-01T08:08:27.679083",
            "duration_seconds": 0.055191993713378906
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:27,730 - mcp - INFO - Enhanced MCP server initialized\n2025-10-01 08:08:27,730 - mcp - INFO - Processing mcp for files in input/gnn_files\n2025-10-01 08:08:27,731 - mcp - INFO - Mcp processing completed\n",
            "memory_usage_mb": 22.046875,
            "peak_memory_mb": 22.046875,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 22,
            "script_name": "21_mcp.py",
            "description": "Model Context Protocol processing",
            "start_time": "2025-10-01T08:08:27.679349",
            "end_time": "2025-10-01T08:08:27.739778",
            "duration_seconds": 0.06042790412902832
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:28,852 - gui - INFO - \ud83d\udce6 Running in HEADLESS mode - generating artifacts only (fast)\n2025-10-01 08:08:28,852 - gui - INFO - Processing GUI module for files in input/gnn_files\n2025-10-01 08:08:28,852 - gui - INFO - Running GUI types: ['gui_1', 'gui_2']\n2025-10-01 08:08:28,852 - gui - INFO - Mode: HEADLESS\n2025-10-01 08:08:28,852 - gui - INFO - \ud83c\udfae Starting GUI 1: Form-based Interactive GNN Constructor\n2025-10-01 08:08:28,852 - gui - INFO - \ud83d\udce6 Running GUI 1 in HEADLESS mode - generating artifacts only\n2025-10-01 08:08:28,852 - gui - INFO - \u2705 GUI 1 artifacts generated (headless). Export: output/22_gui_output/constructed_model_gui1.md\n2025-10-01 08:08:28,852 - gui - INFO - \u2705 GUI 1 completed successfully\n2025-10-01 08:08:28,853 - gui - INFO - \ud83c\udfaf Starting GUI 2: Visual Matrix Editor\n2025-10-01 08:08:28,853 - gui - INFO - \ud83d\udce6 Running GUI 2 in HEADLESS mode - generating artifacts only\n2025-10-01 08:08:28,853 - gui - INFO - \u2705 GUI 2 artifacts generated (headless). Export: output/22_gui_output/visual_model_gui2.md\n2025-10-01 08:08:28,854 - gui - INFO - \u2705 GUI 2 completed successfully\n2025-10-01 08:08:28,854 - gui - INFO - \ud83d\udcca GUI processing summary saved to: output/22_gui_output/gui_processing_summary.json\n",
            "memory_usage_mb": 22.046875,
            "peak_memory_mb": 22.046875,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 23,
            "script_name": "22_gui.py",
            "description": "GUI (Interactive GNN Constructor)",
            "start_time": "2025-10-01T08:08:27.740096",
            "end_time": "2025-10-01T08:08:28.942595",
            "duration_seconds": 1.2024970054626465
        },
        {
            "status": "SUCCESS",
            "stdout": "",
            "stderr": "2025-10-01 08:08:28,990 - report - INFO - Processing report for files in input/gnn_files\n2025-10-01 08:08:28,990 - report - INFO - Report processing completed\n",
            "memory_usage_mb": 22.046875,
            "peak_memory_mb": 22.046875,
            "memory_delta_mb": 0.0,
            "exit_code": 0,
            "retry_count": 0,
            "prerequisite_check": true,
            "dependency_warnings": [],
            "recoverable": false,
            "step_number": 24,
            "script_name": "23_report.py",
            "description": "Report generation",
            "start_time": "2025-10-01T08:08:28.942890",
            "end_time": "2025-10-01T08:08:28.999427",
            "duration_seconds": 0.056535959243774414
        }
    ],
    "end_time": "2025-10-01T08:08:28.999700",
    "overall_status": "FAILED",
    "total_duration_seconds": 177.99970197677612,
    "environment_info": {
        "python_version": "3.11.13 (main, Aug  8 2025, 16:50:33) [Clang 20.1.4 ]",
        "platform": "darwin",
        "cpu_count": 14,
        "working_directory": "/Users/4d/Documents/GitHub/generalizednotationnotation",
        "user": "4d",
        "memory_total_gb": "24.0",
        "disk_free_gb": "81.7"
    },
    "performance_summary": {
        "peak_memory_mb": 29.203125,
        "total_steps": 24,
        "failed_steps": 1,
        "critical_failures": 1,
        "successful_steps": 23,
        "warnings": 3
    }
}