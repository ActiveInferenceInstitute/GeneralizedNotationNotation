/* GNN Model: Classic Active Inference POMDP Agent v1 */
/* Generated from GNN markdown */

/* Model metadata */
model_name: "Classic Active Inference POMDP Agent v1";
version: "1.0";
annotation: "This model describes a classic Active Inference agent for a discrete POMDP:
- One observation modality ("state_observation") with 3 possible outcomes.
- One hidden state factor ("location") with 3 possible states.
- The hidden state is fully controllable via 3 discrete actions.
- The agent's preferences are encoded as log-probabilities over observations.
- The agent has an initial policy prior (habit) encoded as log-probabilities over actions.";

/* Variable definitions */
variables: [
  ["A", "parameter_matrix", [3, 3], "Likelihood mapping hidden states to observations"]
  ["B", "parameter_matrix", [3, 3, 3], "State transitions given previous state and action"]
  ["C", "parameter_matrix", [3], "Log-preferences over observations"]
  ["D", "parameter_matrix", [3], "Prior over initial hidden states"]
  ["E", "parameter_matrix", [3], "Initial policy prior (habit) over actions"]
  ["s", "hidden_state", [3, 1], "Current hidden state distribution"]
  ["s_prime", "hidden_state", [3, 1], "Next hidden state distribution"]
  ["o", "observation", [3, 1], "Current observation (integer index)"]
  ["π", "hidden_state", [3], "Policy (distribution over actions), no planning"]
  ["u", "action", [1], "Action taken"]
  ["G", "hidden_state", [], "Expected Free Energy (per policy)"]
  ["t", "hidden_state", [1], "Discrete time step"]
];

/* Connection definitions */
connections: [
  ["D", "s", "directed", ""]
  ["s", "A", "undirected", ""]
  ["s", "s_prime", "directed", ""]
  ["A", "o", "undirected", ""]
  ["s", "B", "undirected", ""]
  ["C", "G", "directed", ""]
  ["E", "π", "directed", ""]
  ["G", "π", "directed", ""]
  ["π", "u", "directed", ""]
  ["B", "u", "directed", ""]
  ["u", "s_prime", "directed", ""]
];

/* Parameter definitions */
parameters: [
  ["A", "{", ""]
  ["B", "{", ""]
  ["C", "(0.1, 0.1, 1.0)", ""]
  ["D", "(0.33333, 0.33333, 0.33333)", ""]
  ["E", "(0.33333, 0.33333, 0.33333)", ""]
];

/* Helper functions */
get_variable(name) := block([result], result: false, for v in variables do if v[1] = name then result: v, result);
get_connections_from(source) := block([result], result: [], for c in connections do if c[1] = source then result: cons(c, result), result);
get_connections_to(target) := block([result], result: [], for c in connections do if c[2] = target then result: cons(c, result), result);
