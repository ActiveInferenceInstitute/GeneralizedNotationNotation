{
  "exit_code": 1,
  "stdout": "py                                              150     43    71%   97-100, 112-114, 148-150, 184-186, 217-219, 260-261, 298, 313-323, 352-374\nsrc/report/analyzer.py                                               184     30    84%   60-61, 179-182, 204-209, 215-224, 227-230, 282-283, 357-358, 402-403, 501-502\nsrc/report/formatters.py                                             124      1    99%   347\nsrc/render/jax/templates/combined_template.py                          0      0   100%\nsrc/render/jax/templates/general_template.py                           0      0   100%\nsrc/render/jax/templates/pomdp_template.py                             0      0   100%\n------------------------------------------------------------------------------------------------\nTOTAL                                                              31606  31179     1%\nCoverage HTML written to dir output/coverage_html\nCoverage XML written to file output/coverage.xml\n=========================== short test summary info ============================\nFAILED src/tests/test_report_comprehensive.py::TestReportAnalyzer::test_analyze_step_directory\nFAILED src/tests/test_report_comprehensive.py::TestReportFormatters::test_generate_html_report\nFAILED src/tests/test_report_comprehensive.py::TestReportFormatters::test_generate_markdown_report\nFAILED src/tests/test_report_comprehensive.py::TestReportIntegration::test_full_report_generation_workflow\nFAILED src/tests/test_pipeline_scripts.py::TestStep14ReportComprehensive::test_step14_report_generation\nERROR src/tests/test_report_comprehensive.py::TestReportGenerator::test_generate_html_report_file\nERROR src/tests/test_report_comprehensive.py::TestReportGenerator::test_generate_markdown_report_file\nERROR src/tests/test_report_comprehensive.py::TestReportGenerator::test_generate_json_report_file\nERROR src/tests/test_report_comprehensive.py::TestReportGenerator::test_validate_report_data\n============ 5 failed, 21 passed, 2 deselected, 4 errors in 19.00s =============\n",
  "stderr": "ents/GitHub/GeneralizedNotationNotation/src/gnn/parsers/isabelle_serializer.py:24: DeprecationWarning: invalid escape sequence '\\<'\n  lines.append(f'text \\\\\\<open>{model.annotation}\\\\\\<close>')\n/home/trim/Documents/GitHub/GeneralizedNotationNotation/src/gnn/parsers/isabelle_serializer.py:24: DeprecationWarning: invalid escape sequence '\\<'\n  lines.append(f'text \\\\\\<open>{model.annotation}\\\\\\<close>')\n<unknown>:23: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:23: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:24: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:24: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:23: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:23: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:24: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:24: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:23: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:23: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:24: DeprecationWarning: invalid escape sequence '\\<'\n<unknown>:24: DeprecationWarning: invalid escape sequence '\\<'\n/home/trim/Documents/GitHub/GeneralizedNotationNotation/src/gnn/parsers/isabelle_serializer.py:23: DeprecationWarning: invalid escape sequence '\\<'\n  lines.append(f'text \\\\\\<open>{model.model_name}\\\\\\<close>')\n/home/trim/Documents/GitHub/GeneralizedNotationNotation/src/gnn/parsers/isabelle_serializer.py:23: DeprecationWarning: invalid escape sequence '\\<'\n  lines.append(f'text \\\\\\<open>{model.model_name}\\\\\\<close>')\n/home/trim/Documents/GitHub/GeneralizedNotationNotation/src/gnn/parsers/isabelle_serializer.py:24: DeprecationWarning: invalid escape sequence '\\<'\n  lines.append(f'text \\\\\\<open>{model.annotation}\\\\\\<close>')\n/home/trim/Documents/GitHub/GeneralizedNotationNotation/src/gnn/parsers/isabelle_serializer.py:24: DeprecationWarning: invalid escape sequence '\\<'\n  lines.append(f'text \\\\\\<open>{model.annotation}\\\\\\<close>')\n",
  "test_options": {
    "verbose": true,
    "include_slow": false,
    "fast_only": false,
    "generate_coverage": true,
    "include_report_tests": true
  },
  "pytest_command": "src/tests/ -v --junitxml=output/pytest_report.xml src/tests/test_report_comprehensive.py src/tests/test_pipeline_steps.py::TestStep14Report src/tests/test_pipeline_scripts.py::TestStep14ReportComprehensive --cov=src --cov=src/report --cov-report=html:output/coverage_html --cov-report=xml:output/coverage.xml --cov-report=term-missing -m unit or integration --tb=short"
}